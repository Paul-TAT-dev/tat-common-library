{"version":3,"file":"table-table-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACVA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5EA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AAEA;AAEA;AAEA;;;;;AAAA;AAKA;AAmBA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;;;;;;;;;;;;;;;AAMA;AACA;AAEA;AACA;AAAA;;;;;AAFA;;;;;;;;;;;;;;;AASA;AAAA;AAAA;AAAA;AAAA;;;;;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAKA;AAEA","sources":["webpack://@tat/common-library/./src/table/table.css","webpack://@tat/common-library/./src/table/pagination/index.ts","webpack://@tat/common-library/./src/table/table.css?d068","webpack://@tat/common-library/./src/table/table.stories.tsx","webpack://@tat/common-library/./src/table/table.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `td {\n  vertical-align: middle;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/table/table.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,sBAAsB;AACxB\",\"sourcesContent\":[\"td {\\n  vertical-align: middle;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","export { default as Pagination } from './pagination';\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./table.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./table.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./table.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { Meta, StoryObj } from \"@storybook/react\";\nimport table, { PaginationPosition } from \"./table\";\n\nconst meta: Meta<typeof table> = {\n  component: table,\n  title: \"Components/table\",\n};\n\nexport default meta;\ntype Story = StoryObj<typeof table>;\n\nexport const Default: Story = {\n  args: {\n    header: [{ label: \"ID\" }, { label: \"Name\" }, { label: \"Email\" }],\n    data: [\n      [1, \"John Doe\", \"2L2e0@example.com\"],\n      [2, \"Jane Doe\", \"K2L2e0@example.com\"],\n    ],\n    totalPages: 1,\n    itemsPerPage: 10,\n    setItemsPerPage: () => {},\n    currentPage: 1,\n    setCurrentPage: () => {},\n    paginationPosition: PaginationPosition.BOTH,\n    noDataMessage: \"No data found\",\n  },\n};\n","import { FC, memo, ReactNode, useEffect, useState } from 'react';\n\nimport { Pagination } from './pagination';\n\nimport './table.css';\n\nexport enum PaginationPosition {\n  TOP = 'top',\n  BOTTOM = 'bottom',\n  BOTH = 'both',\n  NONE = 'none'\n}\n\ninterface headerProps {\n  label: string;\n  width?: string;\n}\n\ninterface TableProps {\n  header: headerProps[];\n  data: ReactNode[][];\n  totalPages?: number;\n  itemsPerPage: number;\n  setItemsPerPage: (itemsPerPage: number) => void;\n  currentPage: number;\n  setCurrentPage: (pageNumber: number) => void;\n  paginationPosition?: PaginationPosition;\n  noDataMessage?: string;\n}\n\nconst Table: FC<TableProps> = ({\n  header,\n  data,\n  totalPages = 1,\n  itemsPerPage = 10,\n  setItemsPerPage,\n  currentPage = 1,\n  setCurrentPage,\n  paginationPosition = PaginationPosition.BOTTOM,\n  noDataMessage = 'No data found'\n}) => {\n  const [filteredData, setFilteredData] = useState(data);\n\n  const updateData = (pNumber: number, iPerPage: number) => {\n    if (process.env.NODE_ENV === 'development') {\n      const startIndex = (pNumber - 1) * iPerPage;\n      const endIndex = startIndex + iPerPage;\n      const paginatedItems = data.slice(startIndex, endIndex);\n      setFilteredData(paginatedItems);\n    } else {\n      setFilteredData(data);\n    }\n  };\n\n  useEffect(() => {\n    updateData(currentPage, itemsPerPage);\n  }, [data]);\n\n  return (\n    <div>\n      {(paginationPosition === PaginationPosition.TOP ||\n        paginationPosition === PaginationPosition.BOTH) && (\n        <Pagination\n          totalItems={totalPages}\n          itemsPerPage={itemsPerPage}\n          setItemsPerPage={setItemsPerPage}\n          currentPage={currentPage}\n          setCurrentPage={setCurrentPage}\n          onPageChange={(p, i) => {\n            updateData(p, i);\n          }}\n        />\n      )}\n      {filteredData.length > 0 ? (\n        <table className=\"table table-striped table-hover my-3\">\n          <thead className=\"table-dark\">\n            <tr>\n              {header.map((item, index) => (\n                <th key={index} style={{ width: item?.width || '' }}>\n                  {item.label}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {filteredData.map((item, index) => (\n              <tr key={index}>\n                {item.map((item, index) => (\n                  <td key={index}>{item}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <div style={{ textAlign: 'center' }}>{noDataMessage}</div>\n      )}\n      {(paginationPosition === PaginationPosition.BOTTOM ||\n        paginationPosition === PaginationPosition.BOTH) && (\n        <Pagination\n          totalItems={totalPages}\n          itemsPerPage={itemsPerPage}\n          setItemsPerPage={setItemsPerPage}\n          currentPage={currentPage}\n          setCurrentPage={setCurrentPage}\n          onPageChange={(p, i) => {\n            updateData(p, i);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Table);\n"],"names":[],"sourceRoot":""}