{"version":3,"file":"form-select-select-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC5EA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AAEA;AAeA;AAQA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;;;;;AAGA;AAGA;AACA;AAEA;AAJA;;;;;;;;;;;AAQA;AAAA;AAAA;;;;;;;;;;;;AAGA;AAEA","sources":["webpack://@tat/common-library/./src/form/select/select.css","webpack://@tat/common-library/./src/form/select/select.css?be33","webpack://@tat/common-library/./src/form/select/select.stories.tsx","webpack://@tat/common-library/./src/form/select/select.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.form-floating-sm {\n  zoom: 90%;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/form/select/select.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,SAAS;AACX\",\"sourcesContent\":[\".form-floating-sm {\\n  zoom: 90%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./select.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./select.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./select.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { Meta, StoryObj } from \"@storybook/react\";\nimport select from \"./select\";\n\nconst meta: Meta<typeof select> = {\n  component: select,\n  title: \"Components/select\",\n};\n\nexport default meta;\ntype Story = StoryObj<typeof select>;\n\nexport const Default: Story = {\n  args: {\n    id: \"select\",\n    placeholder: \"-- Placeholder --\",\n    label: \"Selection\",\n    options: [\n      { id: \"1\", value: \"Item 1\" },\n      { id: \"2\", value: \"Item 2\" },\n      { id: \"3\", value: \"Item 3\" },\n    ],\n    value: \"\",\n    onChange: () => {},\n  },\n};\n\nexport const Selected: Story = {\n  args: {\n    id: \"select\",\n    placeholder: \"-- Placeholder --\",\n    label: \"Selection\",\n    options: [\n      { id: \"1\", value: \"Item 1\" },\n      { id: \"2\", value: \"Item 2\" },\n      { id: \"3\", value: \"Item 3\" },\n    ],\n    value: \"Item 1\",\n    onChange: () => {},\n  },\n};\n","import { ChangeEvent, FC, memo } from 'react';\n\nimport './select.css';\n\ninterface SelectProps {\n  id: string;\n  placeholder: string;\n  label: string;\n  options: {\n    id: string;\n    value?: string;\n    text?: string;\n  }[];\n  value: string;\n  onChange: (event: ChangeEvent<HTMLSelectElement>) => void;\n}\n\nconst Select: FC<SelectProps> = ({\n  id,\n  placeholder,\n  label,\n  options,\n  value,\n  onChange\n}) => {\n  return (\n    <div className=\"form-floating-sm form-floating mb-3\">\n      <select\n        className=\"form-select\"\n        id={id}\n        aria-label={placeholder}\n        onChange={onChange}\n      >\n        <option key=\"0\" value=\"\">\n          -- Select an option --\n        </option>\n        {options.map((option, idx) => (\n          <option\n            key={option.id}\n            value={option.value || option.text}\n            selected={option.value === value || option.text === value}\n          >\n            {option.value || option.text}\n          </option>\n        ))}\n      </select>\n      <label htmlFor={id}>{label}</label>\n    </div>\n  );\n};\n\nexport default memo(Select);\n"],"names":[],"sourceRoot":""}